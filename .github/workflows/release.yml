name: Release

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

permissions:
  contents: write

jobs:
  autotag:
    name: Auto Tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-version.outputs.newTag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump Version
        id: bump-version
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version-type:  'patch'

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: autotag
    if: needs.autotag.outputs.version != ''
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Display version information
        run: |
          echo "Building for version: ${{ needs.autotag.outputs.version }}"
          grep "const Version" version.go

      - name: Build for amd64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -trimpath -ldflags '-d -w' -o gosu-x86_64

      - name: Build for arm64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -v -trimpath -ldflags '-d -w' -o gosu-aarch64

      - name: Generate checksums
        run: |
          sha256sum gosu-* > SHA256SUMS
          echo "Generated checksums:"
          cat SHA256SUMS

      - name: Test binaries
        run: |
          echo "Testing amd64 binary:"
          file gosu-x86_64
          ./gosu-x86_64 --version || echo "Binary test completed"

          echo "Testing arm64 binary:"
          file gosu-aarch64
          # Note: arm64 binary won't run on amd64, but we can check it's valid
          echo "arm64 binary file check completed"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gosu-binaries
          path: |
            gosu-*
            SHA256SUMS

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [autotag, build]
    if: needs.autotag.outputs.version != ''
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: gosu-binaries

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.autotag.outputs.version }}
          release_name: Release ${{ needs.autotag.outputs.version }}
          body: |
            ## Changes in ${{ needs.autotag.outputs.version }}

            This release was automatically generated from the latest commits to master.
            
            ### Assets
            - `gosu-x86_64`: Linux amd64 binary
            - `gosu-aarch64`: Linux arm64 binary
            - `SHA256SUMS`: Checksums for all binaries
            
            ### Installation
            ```bash
            # For amd64
            wget https://github.com/${{ github.repository }}/releases/download/${{ needs.autotag.outputs.version }}/gosu-x86_64
            chmod +x gosu-x86_64
            sudo mv gosu-x86_64 /usr/local/bin/gosu
            
            # For arm64
            wget https://github.com/${{ github.repository }}/releases/download/${{ needs.autotag.outputs.version }}/gosu-aarch64
            chmod +x gosu-aarch64
            sudo mv gosu-aarch64 /usr/local/bin/gosu
            ```
          draft: false
          prerelease: false

      - name: Upload amd64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosu-x86_64
          asset_name: gosu-x86_64
          asset_content_type: application/octet-stream

      - name: Upload arm64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosu-aarch64
          asset_name: gosu-aarch64
          asset_content_type: application/octet-stream

      - name: Upload checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./SHA256SUMS
          asset_name: SHA256SUMS
          asset_content_type: text/plain
